Описание проекта:
Телеграм-бот для обработки данных о заказах из интернет-магазина.

Испозьзуемые инструменты:
ЯП - Python

Основной модуль:
aiogram

Доп. модули:
os,
dotenv,
sqlite3,
aiosqlite,
datetime,
email,
imaplib


Основные составляющие и задания проекта:
1. Получение ботом данных о заказах, присылаемых на е-мэйл.
2. Обработка данных с занесением в базу.
3. Получение статистики по запросу.

    1. Получение данных прямым доступом к письмам модулями email и imaplib.
        - На почтовый ящик приходят письма не только из интернет-магазина и не только о заказах.
        - Бот будет запускаться локально, если требуется вывод статистики. Хостинг не требуется.

        При обновлении статистики, бот должен получать список уникальных id всех писем из ящика "входящие",
        затем получать из БД уникальный id последнего проверенного письма.
        Далее следует открытие каждого нового для бота письма:
            Если письмо из интернет-магазина, то обрабатываем дальше;
            Если письмо из другого источника, просто меняем уникальный id последнего просмотренного письма в БД.
        При обработке "нужного" письма также меняем уникальный id поледнего просмотренного письма в БД.
        Копаем "тело" письма до text/html типа контента. Отправляем нужные данные на обработку и подготовку
        для внесения в базу.


    2. Для хранения данных будет использоваться база данных - sqlite3.
    DB structure:
    dates - id: int, date: date
    products - id: int, product: text
    codes - id: int, code: text, title: text, product_id: int
    orders - id: int, date_id: int, code_id: int, amount: int
    mail - last_uid: int


    3. Получение статистики включает в себя запрос вида изделия и запрос периода.
    Запрос вида изделия при помощи inline-кнопок с callback_data вида product_all, product_id (продукта), ...:
        - все изделия
        - генератор кнопок по всем видам изделий (product) из таблицы products.

    Запрос периода при помощи inline-кнопок с callback_data вида period_all, period_this_year, ...:
        - за все время
        - за текущий год
        - за прошлый год
        - пользовательский  -> вызовет требование о пользовательском вводе
                               в формате: "дд.мм.гггг-дд.мм.гггг".

    Вывод статистики по каждому виду изделий будет в отдельном сообщении в формате:
    '{code(артикул)} {title(название)} - заказов: {количесво заказов за период}, единиц: {сумма заказанных единиц}'